{"version":3,"sources":["assets/Portfolio Cover - Airbnb NYC.jpg","assets/Jae Beom Bae DS Resume.pdf","components/About.js","components/Contact.js","components/Home.js","components/Resume.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","About","Contact","Home","style","sectionHeadDiv","padding","backgroundColor","projectList","type","name","subtitle","img","img_airbnb","ds_blocks","web_blocks","i","length","push","Card","width","margin","raised","CardMedia","src","title","CardContent","Typography","gutterBottom","variant","component","color","lineHeight","fontWeight","role","aria-label","Resume","href","resumePDF","target","Boolean","window","location","hostname","match","ReactDOM","render","className","position","display","justifyContent","order","exact","to","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,0D,mBCA3CD,EAAOC,QAAU,IAA0B,oD,0LCE5B,SAASC,IACtB,OACE,+CCFW,SAASC,IACtB,OACE,8C,6CCOW,SAASC,IAoBtB,IAnBA,IAAIC,EAAQ,CACVC,eAAgB,CACdC,QAAS,UACTC,gBAAiB,YAIjBC,EAAc,CAChB,CACEC,KAAM,KACNC,KAAM,oCACNC,SAAU,2EACVC,IAAKC,MAILC,EAAY,GACZC,EAAa,GAERC,EAAI,EAAGA,EAAIR,EAAYS,OAAQD,IACV,OAAxBR,EAAYQ,GAAGP,KACjBK,EAAUI,KACR,kBAACC,EAAA,EAAD,CAAMf,MAAO,CAACgB,MAAO,IAAKC,OAAQ,QAASC,QAAM,GAC/C,kBAACC,EAAA,EAAD,CACEC,IAAKX,IACLY,MAAOjB,EAAYQ,GAAGN,OAExB,kBAACgB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC7CtB,EAAYQ,GAAGN,MAElB,kBAACiB,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,gBAAgBD,UAAU,KAA5D,0BAONf,EAAWG,KACT,kBAACC,EAAA,EAAD,CAAMf,MAAO,CAACgB,MAAO,IAAKC,OAAQ,QAASC,QAAM,GAC/C,kBAACC,EAAA,EAAD,CACEC,IAAKX,IACLY,MAAOjB,EAAYQ,GAAGN,OAExB,kBAACgB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,MAC7CtB,EAAYQ,GAAGN,MAElB,kBAACiB,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,gBAAgBD,UAAU,KAA5D,0BASV,OACE,6BACE,yBAAK1B,MAAO,CAACE,QAAS,YACpB,kBAACqB,EAAA,EAAD,CAAYE,QAAQ,KAAKzB,MAAO,CAACgB,MAAO,MAAOC,OAAQ,OAAQW,WAAY,MACzE,0BAAM5B,MAAO,CAAC6B,WAAY,IAAKF,MAAO,YAAtC,kBADF,KAC2E,0BAAM3B,MAAO,CAAC6B,WAAY,IAAKF,MAAO,YAAtC,mBAD3E,SACyJ,0BAAM3B,MAAO,CAAC6B,WAAY,IAAKF,MAAO,YAAtC,wBADzJ,qDAKF,6BACE,yBAAK3B,MAAOA,EAAMC,gBAChB,kBAACsB,EAAA,EAAD,CAAYE,QAAQ,KAAKzB,MAAO,CAAC2B,MAAO,UAAU,0BAAMG,KAAK,MAAMC,aAAW,SAA5B,gBAAlD,kBAEF,yBAAK/B,MAAO,CAACE,QAAS,YACnBQ,IAGL,6BACE,yBAAKV,MAAOA,EAAMC,gBAChB,kBAACsB,EAAA,EAAD,CAAYE,QAAQ,KAAKzB,MAAO,CAAC2B,MAAO,UAAU,0BAAMG,KAAK,MAAMC,aAAW,OAA5B,gBAAlD,SAEF,yBAAK/B,MAAO,CAACE,QAAS,YAAtB,sB,qBCrFO,SAAS8B,IACtB,OACE,6BACE,qDACA,uBAAGC,KAAMC,IAAWC,OAAO,UAA3B,e,MCIcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,mBCOD,WACb,OACE,kBAAC,IAAD,KACE,yBAAKC,UAAU,OACb,yBAAK3C,MAAO,CAAC4C,SAAU,WAAY5B,MAAO,SACxC,yBAAKhB,MAAO,CAAC6C,QAAS,OAAQC,eAAgB,gBAAiB5C,QAAS,KACtE,yBAAKF,MAAO,CAAC6C,QAAS,eAAgBE,MAAO,IAC3C,kBAACxB,EAAA,EAAD,CAAYE,QAAQ,MAApB,iBAEF,yBAAKkB,UAAU,cAAc3C,MAAO,CAAC6C,QAAS,eAAgBE,MAAO,IACnE,kBAAC,IAAD,CAASC,OAAK,EAACC,GAAG,KAAlB,QACA,kBAAC,IAAD,CAASA,GAAG,WAAZ,UACA,kBAAC,IAAD,CAASA,GAAG,UAAZ,SACA,kBAAC,IAAD,CAASA,GAAG,YAAZ,cAIN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,WACV,kBAAClB,EAAD,OAEF,kBAAC,IAAD,CAAOkB,KAAK,UACV,kBAACrD,EAAD,OAEF,kBAAC,IAAD,CAAOqD,KAAK,YACV,kBAACpD,EAAD,OAEF,kBAAC,IAAD,CAAOoD,KAAK,KACV,kBAACnD,EAAD,YDnCI,MAASoD,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e81cc562.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Portfolio Cover - Airbnb NYC.346f3275.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Jae Beom Bae DS Resume.8403e8b1.pdf\";","import React from 'react';\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>About me here.</div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Contact() {\r\n  return (\r\n    <div>Contact Form.</div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\n// import CardActionArea from '@material-ui/core/CardActionArea';\r\n// import CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport img_airbnb from '../assets/Portfolio Cover - Airbnb NYC.jpg';\r\n\r\nexport default function Home() {\r\n  let style = {\r\n    sectionHeadDiv: {\r\n      padding: '100px 0',\r\n      backgroundColor: '#212121'\r\n    }\r\n  };\r\n\r\n  let projectList = [\r\n    {\r\n      type: \"ds\",\r\n      name: \"Home buyer's Guide to Airbnb: NYC\",\r\n      subtitle: \"Insights from data mining & linear regression on Airbnb‚Äôs datasets.\",\r\n      img: img_airbnb\r\n    }\r\n  ];\r\n\r\n  let ds_blocks = [];\r\n  let web_blocks = [];\r\n\r\n  for (var i = 0; i < projectList.length; i++) {\r\n    if (projectList[i].type === 'ds') {\r\n      ds_blocks.push(\r\n        <Card style={{width: 350, margin: 'auto'}} raised>\r\n          <CardMedia\r\n            src={img_airbnb}\r\n            title={projectList[i].name}\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {projectList[i].name}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              Description here...\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      );\r\n    } else {\r\n      web_blocks.push(\r\n        <Card style={{width: 350, margin: 'auto'}} raised>\r\n          <CardMedia\r\n            src={img_airbnb}\r\n            title={projectList[i].name}\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              {projectList[i].name}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              Description here...\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div style={{padding: '250px 0'}}>\r\n        <Typography variant='h4' style={{width: '80%', margin: 'auto', lineHeight: 1.7}}>\r\n          <span style={{fontWeight: 500, color: '#1e88e5'}}>Data Scientist</span>, <span style={{fontWeight: 500, color: '#e91e63'}}>Product Manager</span>, and <span style={{fontWeight: 500, color: '#4caf50'}}>Full-Stack Developer</span> passionate about tackling resource productivity\r\n        </Typography>\r\n        {/* <Typography variant='subtitle1'>(Energy, Water, Food, Human Capital)</Typography> */}\r\n      </div>\r\n      <div>\r\n        <div style={style.sectionHeadDiv}>\r\n          <Typography variant='h4' style={{color: 'white'}}><span role='img' aria-label='chart'>üìä</span> Data Science</Typography>\r\n        </div>\r\n        <div style={{padding: '100px 0'}}>\r\n          {ds_blocks}\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div style={style.sectionHeadDiv}>\r\n          <Typography variant='h4' style={{color: 'white'}}><span role='img' aria-label='web'>üåç</span> Web</Typography>\r\n        </div>\r\n        <div style={{padding: '100px 0'}}>\r\n          App blocks here.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport resumePDF from '../assets/Jae Beom Bae DS Resume.pdf';\r\n\r\nexport default function Resume() {\r\n  return (\r\n    <div>\r\n      <div>Resume display here.</div>\r\n      <a href={resumePDF} target='_blank'>See Resume</a>\r\n    </div>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, NavLink } from \"react-router-dom\";\n\n// import Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport Home from './components/Home';\nimport Resume from './components/Resume';\n\nimport './App.css';\n\nexport default function App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <nav style={{position: 'absolute', width: '100%'}}>\n          <div style={{display: 'flex', justifyContent: 'space-between', padding: 30}}>\n            <div style={{display: 'inline-block', order: 1}}>\n              <Typography variant='h5'>Jae Beom Bae</Typography>\n            </div>\n            <div className=\"navbar-list\" style={{display: 'inline-block', order: 2}}>\n              <NavLink exact to='/'>Work</NavLink>\n              <NavLink to='/resume'>Resume</NavLink>\n              <NavLink to='/about'>About</NavLink>\n              <NavLink to='/contact'>Contact</NavLink>\n            </div>\n          </div>\n        </nav>\n        <Switch>\n          <Route path=\"/resume\">\n            <Resume />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/contact\">\n            <Contact />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n"],"sourceRoot":""}